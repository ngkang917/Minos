// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Minos.Domain.Aggregates.Model;
using Minos.Engine.Contexts;

namespace Minos.Engine.Migrations
{
    [DbContext(typeof(MinosContext))]
    [Migration("20200713044259_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("minos.domain.Model.Admin", b =>
                {
                    b.Property<int?>("idx")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("A_Idx")
                        .HasColumnType("int");

                    b.Property<int?>("AG_Id")
                        .IsRequired()
                        .HasColumnName("A_AG_Id")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnName("A_email")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("id")
                        .IsRequired()
                        .HasColumnName("A_Id")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("insertDate")
                        .IsRequired()
                        .HasColumnName("A_InsDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnName("A_Name")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnName("A_Password")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnName("A_Phone")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("useFlag")
                        .IsRequired()
                        .HasColumnName("A_UseFlag")
                        .HasColumnType("char(1)")
                        .HasMaxLength(1);

                    b.HasKey("idx");

                    b.HasIndex("AG_Id");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("minos.domain.Model.AdminGroup", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AG_Id")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnName("AG_Description")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("insertDate")
                        .IsRequired()
                        .HasColumnName("AG_InsDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("level")
                        .IsRequired()
                        .HasColumnName("AG_Level")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnName("AG_Name")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("useFlag")
                        .IsRequired()
                        .HasColumnName("AG_UseFlag")
                        .HasColumnType("char(1)")
                        .HasMaxLength(1);

                    b.HasKey("id");

                    b.ToTable("AdminGroup");
                });

            modelBuilder.Entity("minos.domain.Model.AdminMenu", b =>
                {
                    b.Property<int>("idx")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AM_Idx")
                        .HasColumnType("int");

                    b.Property<int?>("AG_Id")
                        .IsRequired()
                        .HasColumnName("AM_AG_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Ordered")
                        .IsRequired()
                        .HasColumnName("AM_Ordered")
                        .HasColumnType("int");

                    b.Property<int?>("Up_Idx")
                        .IsRequired()
                        .HasColumnName("AM_Up_Idx")
                        .HasColumnType("int");

                    b.Property<string>("displayFlag")
                        .IsRequired()
                        .HasColumnName("AM_DisplayFlag")
                        .HasColumnType("char(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("insertDate")
                        .IsRequired()
                        .HasColumnName("AM_InsDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("link")
                        .IsRequired()
                        .HasColumnName("AM_Link")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("target")
                        .IsRequired()
                        .HasColumnName("AM_Target")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnName("AM_Title")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("useFlag")
                        .IsRequired()
                        .HasColumnName("AM_UseFlag")
                        .HasColumnType("char(1)")
                        .HasMaxLength(1);

                    b.HasKey("idx");

                    b.HasIndex("AG_Id");

                    b.ToTable("AdminMenu");
                });

            modelBuilder.Entity("minos.domain.Model.Code", b =>
                {
                    b.Property<int?>("idx")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("C_Idx")
                        .HasColumnType("int");

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnName("C_Category")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("insertDate")
                        .IsRequired()
                        .HasColumnName("C_InsDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnName("C_Text")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("useFlag")
                        .IsRequired()
                        .HasColumnName("C_UseFlag")
                        .HasColumnType("char(1)")
                        .HasMaxLength(1);

                    b.Property<string>("value")
                        .IsRequired()
                        .HasColumnName("C_Value")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("idx");

                    b.ToTable("Code");
                });

            modelBuilder.Entity("minos.domain.Model.Company", b =>
                {
                    b.Property<int?>("idx")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("C_Idx")
                        .HasColumnType("int");

                    b.Property<string>("DBVersion")
                        .IsRequired()
                        .HasColumnName("C_DBVersion")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("deleteFlag")
                        .IsRequired()
                        .HasColumnName("C_DeleteFlag")
                        .HasColumnType("char(1)")
                        .HasMaxLength(1);

                    b.Property<string>("displayFlag")
                        .IsRequired()
                        .HasColumnName("C_DisplayFlag")
                        .HasColumnType("char(1)")
                        .HasMaxLength(1);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnName("C_email")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("id")
                        .IsRequired()
                        .HasColumnName("C_Id")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("insertDate")
                        .IsRequired()
                        .HasColumnName("C_InsDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnName("C_Name")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnName("C_Phone")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("useFlag")
                        .IsRequired()
                        .HasColumnName("C_UseFlag")
                        .HasColumnType("char(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("userMaxCount")
                        .IsRequired()
                        .HasColumnName("C_UserMaxCount")
                        .HasColumnType("int");

                    b.HasKey("idx");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("minos.domain.Model.Device", b =>
                {
                    b.Property<int?>("idx")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("D_Idx")
                        .HasColumnType("int");

                    b.Property<int?>("companyIdx")
                        .IsRequired()
                        .HasColumnName("C_Idx")
                        .HasColumnType("int");

                    b.Property<string>("deleteFlag")
                        .IsRequired()
                        .HasColumnName("D_DeleteFlag")
                        .HasColumnType("char(1)")
                        .HasMaxLength(1);

                    b.Property<string>("firmWare")
                        .IsRequired()
                        .HasColumnName("D_Firmware")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("firmwareVersion")
                        .IsRequired()
                        .HasColumnName("D_FirmwareVersion")
                        .HasColumnType("int");

                    b.Property<DateTime?>("insertDate")
                        .IsRequired()
                        .HasColumnName("D_InsDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("mac")
                        .IsRequired()
                        .HasColumnName("D_Mac")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("useFlag")
                        .IsRequired()
                        .HasColumnName("D_UseFlag")
                        .HasColumnType("char(1)")
                        .HasMaxLength(1);

                    b.HasKey("idx");

                    b.HasIndex("companyIdx");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("minos.domain.Model.User", b =>
                {
                    b.Property<int?>("idx")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("U_Idx")
                        .HasColumnType("int");

                    b.Property<int?>("adminIdx")
                        .IsRequired()
                        .HasColumnName("A_UptIdx")
                        .HasColumnType("int");

                    b.Property<int?>("companyIdx")
                        .IsRequired()
                        .HasColumnName("U_C_Id")
                        .HasColumnType("int");

                    b.Property<string>("deleteFlag")
                        .IsRequired()
                        .HasColumnName("U_DeleteFlag")
                        .HasColumnType("char(1)")
                        .HasMaxLength(1);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnName("U_Email")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("id")
                        .IsRequired()
                        .HasColumnName("U_Id")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("insertDate")
                        .IsRequired()
                        .HasColumnName("U_InsDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnName("U_Name")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnName("U_Phone")
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("updateDate")
                        .IsRequired()
                        .HasColumnName("U_UptDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("useFlag")
                        .IsRequired()
                        .HasColumnName("U_UseFlag")
                        .HasColumnType("char(1)")
                        .HasMaxLength(1);

                    b.HasKey("idx");

                    b.HasIndex("adminIdx");

                    b.HasIndex("companyIdx");

                    b.ToTable("User");
                });

            modelBuilder.Entity("minos.domain.Model.UserGroup", b =>
                {
                    b.Property<int?>("idx")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UG_Idx")
                        .HasColumnType("int");

                    b.Property<int?>("companyIdx")
                        .IsRequired()
                        .HasColumnName("UG_C_Idx")
                        .HasColumnType("int");

                    b.Property<string>("deleteFlag")
                        .IsRequired()
                        .HasColumnName("UG_DeleteFlag")
                        .HasColumnType("char(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("insertDate")
                        .IsRequired()
                        .HasColumnName("UG_InsDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("level")
                        .IsRequired()
                        .HasColumnName("UG_level")
                        .HasColumnType("int");

                    b.Property<string>("useFlag")
                        .IsRequired()
                        .HasColumnName("UG_UseFlag")
                        .HasColumnType("char(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("userIdx")
                        .IsRequired()
                        .HasColumnName("UG_U_Idx")
                        .HasColumnType("int");

                    b.HasKey("idx");

                    b.HasIndex("companyIdx");

                    b.HasIndex("userIdx");

                    b.ToTable("UserGroup");
                });

            modelBuilder.Entity("minos.domain.Model.Admin", b =>
                {
                    b.HasOne("minos.domain.Model.AdminGroup", "adminGroup")
                        .WithMany("admins")
                        .HasForeignKey("AG_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("minos.domain.Model.AdminMenu", b =>
                {
                    b.HasOne("minos.domain.Model.AdminGroup", "adminGroup")
                        .WithMany("adminMenus")
                        .HasForeignKey("AG_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("minos.domain.Model.Device", b =>
                {
                    b.HasOne("minos.domain.Model.Company", "company")
                        .WithMany("devices")
                        .HasForeignKey("companyIdx")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("minos.domain.Model.User", b =>
                {
                    b.HasOne("minos.domain.Model.Admin", "admin")
                        .WithMany("users")
                        .HasForeignKey("adminIdx")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("minos.domain.Model.Company", "company")
                        .WithMany("users")
                        .HasForeignKey("companyIdx")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("minos.domain.Model.UserGroup", b =>
                {
                    b.HasOne("minos.domain.Model.Company", "company")
                        .WithMany("userGroups")
                        .HasForeignKey("companyIdx")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("minos.domain.Model.User", "user")
                        .WithMany("userGroups")
                        .HasForeignKey("userIdx")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
